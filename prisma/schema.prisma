generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String  @id @default(cuid())
  name      String
  email     String
  mobile    String
  admin     Admin[]
}

model User {
  id           String           @id @default(cuid())
  whatsappId   String           @unique // WaId from Twilio
  name         String?          // ProfileName from Twilio
  phone        String           @unique // From number without "whatsapp:" prefix
  appointments Appointment[]
  adminId      String?
  admin        Admin?           @relation(fields: [adminId], references: [id])
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
}

model Admin {
  id             String           @id @default(cuid())
  name           String
  mobileNo       String[]           // Changed from String[]
  email          String
  whatsapp_id    String?
  availableSlots AvailableSlots[]
  uniqueName     String?          @unique
  appointments   Appointment[]
  user           User[]
  accountId      String?
  account        Account?         @relation(fields: [accountId], references: [id])
  created_at     DateTime         @default(now())
}

model Appointment {
  id        String   @id @default(cuid())
  time      String
  date      DateTime
  userId    String?
  user      User?     @relation(fields: [userId], references: [id])
  status    String    @default("PENDING") // PENDING, CONFIRMED, CANCELLED
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  adminId   String?   
  admin     Admin?    @relation(fields: [adminId], references: [id]) // Fixed case

  @@index([userId])
  @@index([date])
}

model AvailableSlots {
   id       String @id @default(cuid())
   active   Boolean
   slots    String[]
   adminId  String?
   admin    Admin?  @relation(fields: [adminId], references: [id])

   @@index([adminId]) // Added index for foreign key
}
